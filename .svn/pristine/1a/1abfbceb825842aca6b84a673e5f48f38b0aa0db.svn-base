<?php
namespace Shorturl\Controller;

use Application\Service\Layout;
use Laminas\Mvc\Controller\AbstractActionController;
use Laminas\View\Model\ViewModel;
use Shorturl\Model\NotFound;
use Shorturl\Model\NotFoundTable;
use Shorturl\Model\ShorturlsTable;
use Shorturl\Model\ShorturlVisit;
use Shorturl\Model\ShorturlVisitsTable;

class RedirectController extends AbstractActionController
{
    protected $layout;
    protected $shorturlsTable;
    protected $shorturlVisitsTable;

    public function __construct(Layout $layout, ShorturlsTable $shorturlTable, ShorturlVisitsTable $shorturlVisitsTable, NotFoundTable $notFoundTable)
    {
        $this->layout = $layout;
        $this->shorturlsTable = $shorturlTable;
        $this->shorturlVisitsTable = $shorturlVisitsTable;
        $this->notFoundTable = $notFoundTable;
    }

    public function indexAction()
    {
        $domain = $this->getDomain();
        $urlCode = $this->params()->fromRoute('urlcode', false);
        if ($domain && $urlCode) {
            $shorturl = $domain . '/' . $urlCode;
            $url = $this->shorturlsTable->getActiveShorturl($shorturl);
            // redirect if url has been found
            if ($url && !$url->isExpired()) {
                $url->visits++;
                $this->shorturlsTable->save($url);
                $visit = new ShorturlVisit();
                $visit->shorturl_id = $url->id;
                $this->shorturlVisitsTable->save($visit);
                $this->redirect()->toUrl($url->target_url);
                return;
            }
            // show error message if url has not been found
            $notFound = new NotFound();
            $notFound->short_url = $shorturl;
            $this->notFoundTable->save($notFound);
            return new ViewModel([
                'shorturl' => $shorturl,
            ]);
        }
        // redirect to welcome page if no shorturl has been given
        $this->redirect()->toRoute('welcome');
    }

    private function getDomain()
    {
        $domain = false;
        if (!empty($_SERVER['HTTP_HOST'])) {
            $domain = $_SERVER['HTTP_HOST'];
        }
        return $domain;
    }
}
